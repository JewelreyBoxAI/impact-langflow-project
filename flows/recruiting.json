{
  "data": {
    "edges": [
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "ChatInput",
            "id": "ChatInput-Recruiting",
            "name": "message",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_value",
            "id": "WorkflowOrchestrator-Main",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-input-to-orchestrator",
        "selected": false,
        "source": "ChatInput-Recruiting",
        "sourceHandle": "message",
        "target": "WorkflowOrchestrator-Main",
        "targetHandle": "input_value"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "CSVLoader",
            "id": "CSVLoader-Upload",
            "name": "data_output",
            "output_types": ["Data"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "PythonTool-Validation",
            "inputTypes": ["Data"],
            "type": "data"
          }
        },
        "id": "edge-csv-to-validation",
        "selected": false,
        "source": "CSVLoader-Upload",
        "sourceHandle": "data_output",
        "target": "PythonTool-Validation",
        "targetHandle": "input_data"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "PythonTool",
            "id": "PythonTool-Validation",
            "name": "output",
            "output_types": ["Data"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "HTTPTool-ZohoDedupe",
            "inputTypes": ["Data"],
            "type": "data"
          }
        },
        "id": "edge-validation-to-dedupe",
        "selected": false,
        "source": "PythonTool-Validation",
        "sourceHandle": "output",
        "target": "HTTPTool-ZohoDedupe",
        "targetHandle": "input_data"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "HTTPTool",
            "id": "HTTPTool-ZohoDedupe",
            "name": "response",
            "output_types": ["Data"]
          },
          "targetHandle": {
            "fieldName": "prospect_list",
            "id": "WorkflowOrchestrator-Main",
            "inputTypes": ["Data"],
            "type": "data"
          }
        },
        "id": "edge-dedupe-to-orchestrator",
        "selected": false,
        "source": "HTTPTool-ZohoDedupe",
        "sourceHandle": "response",
        "target": "WorkflowOrchestrator-Main",
        "targetHandle": "prospect_list"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "WorkflowOrchestrator",
            "id": "WorkflowOrchestrator-Main",
            "name": "routed_message",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_value",
            "id": "OpenAIModel-Main",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-orchestrator-to-llm",
        "selected": false,
        "source": "WorkflowOrchestrator-Main",
        "sourceHandle": "routed_message",
        "target": "OpenAIModel-Main",
        "targetHandle": "input_value"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "Prompt",
            "id": "SystemPrompt-Impact",
            "name": "prompt",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "system_message",
            "id": "OpenAIModel-Main",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-prompt-to-llm",
        "selected": false,
        "source": "SystemPrompt-Impact",
        "sourceHandle": "prompt",
        "target": "OpenAIModel-Main",
        "targetHandle": "system_message"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "Memory",
            "id": "BufferMemory-Main",
            "name": "messages_text",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "memory",
            "id": "SystemPrompt-Impact",
            "inputTypes": ["Message", "Text"],
            "type": "str"
          }
        },
        "id": "edge-memory-to-prompt",
        "selected": false,
        "source": "BufferMemory-Main",
        "sourceHandle": "messages_text",
        "target": "SystemPrompt-Impact",
        "targetHandle": "memory"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "VectorStoreRetriever",
            "id": "VectorStoreRetriever-Semantic",
            "name": "retrieved_context",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "context",
            "id": "SystemPrompt-Impact",
            "inputTypes": ["Message", "Text"],
            "type": "str"
          }
        },
        "id": "edge-vector-to-prompt",
        "selected": false,
        "source": "VectorStoreRetriever-Semantic",
        "sourceHandle": "retrieved_context",
        "target": "SystemPrompt-Impact",
        "targetHandle": "context"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "OpenAIModel",
            "id": "OpenAIModel-Main",
            "name": "text_output",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "response",
            "id": "ConditionalRouter-Stage",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-llm-to-router",
        "selected": false,
        "source": "OpenAIModel-Main",
        "sourceHandle": "text_output",
        "target": "ConditionalRouter-Stage",
        "targetHandle": "response"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "ConditionalRouter",
            "id": "ConditionalRouter-Stage",
            "name": "sms_route",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "HTTPTool-SalesMsgSend",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-router-to-sms",
        "selected": false,
        "source": "ConditionalRouter-Stage",
        "sourceHandle": "sms_route",
        "target": "HTTPTool-SalesMsgSend",
        "targetHandle": "input_data"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "HTTPTool",
            "id": "HTTPTool-SalesMsgSend",
            "name": "response",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "HTTPTool-SalesMsgGet",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-sms-send-to-get",
        "selected": false,
        "source": "HTTPTool-SalesMsgSend",
        "sourceHandle": "response",
        "target": "HTTPTool-SalesMsgGet",
        "targetHandle": "input_data"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "HTTPTool",
            "id": "HTTPTool-SalesMsgGet",
            "name": "response",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "ConditionalRouter-Response",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-sms-get-to-response-router",
        "selected": false,
        "source": "HTTPTool-SalesMsgGet",
        "sourceHandle": "response",
        "target": "ConditionalRouter-Response",
        "targetHandle": "input_data"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "ConditionalRouter",
            "id": "ConditionalRouter-Response",
            "name": "positive_route",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "HTTPTool-ZohoCRMCreate",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-response-positive-to-crm",
        "selected": false,
        "source": "ConditionalRouter-Response",
        "sourceHandle": "positive_route",
        "target": "HTTPTool-ZohoCRMCreate",
        "targetHandle": "input_data"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "HTTPTool",
            "id": "HTTPTool-ZohoCRMCreate",
            "name": "response",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "HTTPTool-ZohoCalendar",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-crm-to-calendar",
        "selected": false,
        "source": "HTTPTool-ZohoCRMCreate",
        "sourceHandle": "response",
        "target": "HTTPTool-ZohoCalendar",
        "targetHandle": "input_data"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "ConditionalRouter",
            "id": "ConditionalRouter-Response",
            "name": "negative_route",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "HTTPTool-ZohoTagNotInterested",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-response-negative-to-tag",
        "selected": false,
        "source": "ConditionalRouter-Response",
        "sourceHandle": "negative_route",
        "target": "HTTPTool-ZohoTagNotInterested",
        "targetHandle": "input_data"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "ConditionalRouter",
            "id": "ConditionalRouter-Response",
            "name": "no_response_route",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "ConditionalRouter-Retry",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-response-no-response-to-retry",
        "selected": false,
        "source": "ConditionalRouter-Response",
        "sourceHandle": "no_response_route",
        "target": "ConditionalRouter-Retry",
        "targetHandle": "input_data"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "ConditionalRouter",
            "id": "ConditionalRouter-Retry",
            "name": "retry_route",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "PythonTool-Delay",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-retry-to-delay",
        "selected": false,
        "source": "ConditionalRouter-Retry",
        "sourceHandle": "retry_route",
        "target": "PythonTool-Delay",
        "targetHandle": "input_data"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "PythonTool",
            "id": "PythonTool-Delay",
            "name": "output",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "HTTPTool-SalesMsgSend",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-delay-to-sms-retry",
        "selected": false,
        "source": "PythonTool-Delay",
        "sourceHandle": "output",
        "target": "HTTPTool-SalesMsgSend",
        "targetHandle": "input_data"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "HTTPTool",
            "id": "HTTPTool-ZohoCalendar",
            "name": "response",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "PostgreSQL-Leads",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-calendar-to-postgres",
        "selected": false,
        "source": "HTTPTool-ZohoCalendar",
        "sourceHandle": "response",
        "target": "PostgreSQL-Leads",
        "targetHandle": "input_data"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "PostgreSQL",
            "id": "PostgreSQL-Leads",
            "name": "response",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "HTTPTool-GrafanaWebhook",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-postgres-to-webhook",
        "selected": false,
        "source": "PostgreSQL-Leads",
        "sourceHandle": "response",
        "target": "HTTPTool-GrafanaWebhook",
        "targetHandle": "input_data"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "HTTPTool",
            "id": "HTTPTool-GrafanaWebhook",
            "name": "response",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_value",
            "id": "ChatOutput-Recruiting",
            "inputTypes": ["Data", "DataFrame", "Message"],
            "type": "str"
          }
        },
        "id": "edge-webhook-to-output",
        "selected": false,
        "source": "HTTPTool-GrafanaWebhook",
        "sourceHandle": "response",
        "target": "ChatOutput-Recruiting",
        "targetHandle": "input_value"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "ConditionalRouter",
            "id": "ConditionalRouter-Stage",
            "name": "email_route",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "HTTPTool-ZohoMail",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-router-to-email",
        "selected": false,
        "source": "ConditionalRouter-Stage",
        "sourceHandle": "email_route",
        "target": "HTTPTool-ZohoMail",
        "targetHandle": "input_data"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "HTTPTool",
            "id": "HTTPTool-ZohoMail",
            "name": "response",
            "output_types": ["Message"]
          },
          "targetHandle": {
            "fieldName": "input_data",
            "id": "PostgreSQL-Leads",
            "inputTypes": ["Message"],
            "type": "str"
          }
        },
        "id": "edge-email-to-postgres",
        "selected": false,
        "source": "HTTPTool-ZohoMail",
        "sourceHandle": "response",
        "target": "PostgreSQL-Leads",
        "targetHandle": "input_data"
      }
    ],
    "nodes": [
      {
        "data": {
          "id": "ChatInput-Recruiting",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Get chat inputs from the Playground.",
            "display_name": "Chat Input",
            "documentation": "",
            "edited": false,
            "field_order": ["input_value", "should_store_message", "sender", "sender_name", "session_id", "files", "background_color", "chat_icon", "text_color"],
            "frozen": false,
            "icon": "MessagesSquare",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Message",
                "method": "message_response",
                "name": "message",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_value": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "display_name": "Text",
                "dynamic": false,
                "info": "Message to be passed as input.",
                "input_types": [],
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "input_value",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": ""
              },
              "files": {
                "_input_type": "FileInput",
                "advanced": true,
                "display_name": "Files",
                "dynamic": false,
                "fileTypes": ["csv", "txt", "xlsx"],
                "file_path": "",
                "info": "Files to be sent with the message, including CSV files for prospect data.",
                "list": true,
                "name": "files",
                "placeholder": "",
                "required": false,
                "show": true,
                "temp_file": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "file",
                "value": ""
              }
            },
            "tool_mode": false
          },
          "type": "ChatInput"
        },
        "dragging": false,
        "height": 234,
        "id": "ChatInput-Recruiting",
        "position": {"x": 100, "y": 50},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "CSVLoader-Upload",
          "node": {
            "base_classes": ["Data"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Load data from CSV files.",
            "display_name": "CSV Loader",
            "documentation": "",
            "edited": false,
            "field_order": ["file_path", "separator", "encoding"],
            "frozen": false,
            "icon": "FileSpreadsheet",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Data",
                "method": "load_data",
                "name": "data_output",
                "selected": "Data",
                "tool_mode": true,
                "types": ["Data"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "file_path": {
                "_input_type": "FileInput",
                "advanced": false,
                "display_name": "File Path",
                "dynamic": false,
                "fileTypes": ["csv"],
                "info": "Path to CSV file containing DBPR agent data",
                "name": "file_path",
                "required": true,
                "show": true,
                "type": "file",
                "value": ""
              },
              "separator": {
                "_input_type": "StrInput",
                "advanced": true,
                "display_name": "Separator",
                "info": "CSV separator character",
                "name": "separator",
                "type": "str",
                "value": ","
              },
              "encoding": {
                "_input_type": "StrInput",
                "advanced": true,
                "display_name": "Encoding",
                "info": "File encoding",
                "name": "encoding",
                "type": "str",
                "value": "utf-8"
              }
            },
            "tool_mode": false
          },
          "type": "CSVLoader"
        },
        "dragging": false,
        "height": 260,
        "id": "CSVLoader-Upload",
        "position": {"x": 100, "y": 350},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "PythonTool-Validation",
          "node": {
            "base_classes": ["Data"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Execute Python code for data validation and processing.",
            "display_name": "Python Tool",
            "documentation": "",
            "edited": false,
            "field_order": ["input_data", "code"],
            "frozen": false,
            "icon": "Python",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Output",
                "method": "execute_code",
                "name": "output",
                "selected": "Data",
                "tool_mode": true,
                "types": ["Data"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_data": {
                "_input_type": "HandleInput",
                "display_name": "Input Data",
                "info": "Data to validate",
                "input_types": ["Data"],
                "name": "input_data",
                "required": true,
                "type": "data"
              },
              "code": {
                "_input_type": "MultilineInput",
                "display_name": "Python Code",
                "info": "Python code for validation",
                "multiline": true,
                "name": "code",
                "type": "str",
                "value": "import pandas as pd\nimport re\n\n# Validation rules for DBPR agent data\ndef validate_agent_data(df):\n    validated_data = []\n    \n    for idx, row in df.iterrows():\n        # Check required fields\n        if pd.isna(row.get('name')) or pd.isna(row.get('phone')) or pd.isna(row.get('email')):\n            continue\n            \n        # Validate phone format\n        phone_pattern = r'^\\+?1?[2-9]\\d{2}[2-9]\\d{2}\\d{4}$'\n        if not re.match(phone_pattern, str(row.get('phone', '')).replace('-', '').replace(' ', '')):\n            continue\n            \n        # Validate email format\n        email_pattern = r'^[\\w\\.-]+@[\\w\\.-]+\\.[a-zA-Z]{2,}$'\n        if not re.match(email_pattern, str(row.get('email', ''))):\n            continue\n            \n        # Add validated record\n        validated_data.append({\n            'name': row.get('name'),\n            'phone': row.get('phone'),\n            'email': row.get('email'),\n            'license_number': row.get('license', ''),\n            'brokerage': row.get('brokerage', ''),\n            'experience': row.get('experience', 0),\n            'validation_status': 'valid'\n        })\n    \n    return pd.DataFrame(validated_data)\n\n# Execute validation\nresult = validate_agent_data(input_data)\noutput = result"
              }
            },
            "tool_mode": false
          },
          "type": "PythonTool"
        },
        "dragging": false,
        "height": 300,
        "id": "PythonTool-Validation",
        "position": {"x": 500, "y": 350},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "HTTPTool-ZohoDedupe",
          "node": {
            "base_classes": ["Data"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "HTTP tool for Zoho CRM deduplication via MCP.",
            "display_name": "HTTP Tool",
            "documentation": "",
            "edited": false,
            "field_order": ["input_data", "url", "method", "headers", "body"],
            "frozen": false,
            "icon": "Globe",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Response",
                "method": "make_request",
                "name": "response",
                "selected": "Data",
                "tool_mode": true,
                "types": ["Data"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_data": {
                "_input_type": "HandleInput",
                "display_name": "Input Data",
                "info": "Validated prospect data",
                "input_types": ["Data"],
                "name": "input_data",
                "required": true,
                "type": "data"
              },
              "url": {
                "_input_type": "StrInput",
                "display_name": "URL",
                "info": "Zoho CRM MCP endpoint for deduplication",
                "name": "url",
                "required": true,
                "type": "str",
                "value": "{ZOHO_MCP_BASE_URL}/dedupe"
              },
              "method": {
                "_input_type": "DropdownInput",
                "display_name": "Method",
                "info": "HTTP method",
                "name": "method",
                "options": ["GET", "POST", "PUT", "DELETE"],
                "type": "str",
                "value": "POST"
              },
              "headers": {
                "_input_type": "MultilineInput",
                "display_name": "Headers",
                "info": "HTTP headers as JSON",
                "multiline": true,
                "name": "headers",
                "type": "str",
                "value": "{\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"Bearer {ZOHO_ACCESS_TOKEN}\"\n}"
              },
              "body": {
                "_input_type": "MultilineInput",
                "display_name": "Request Body",
                "info": "Request body template",
                "multiline": true,
                "name": "body",
                "type": "str",
                "value": "{\n  \"module\": \"Contacts\",\n  \"data\": \"{input_data}\",\n  \"operation\": \"deduplicate\",\n  \"criteria\": [\"email\", \"phone\"]\n}"
              }
            },
            "tool_mode": false
          },
          "type": "HTTPTool"
        },
        "dragging": false,
        "height": 340,
        "id": "HTTPTool-ZohoDedupe",
        "position": {"x": 900, "y": 350},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "WorkflowOrchestrator-Main",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Orchestrate multi-step recruiting workflow and pipeline management",
            "display_name": "Workflow Orchestrator",
            "documentation": "",
            "edited": false,
            "field_order": ["input_value", "prospect_list", "workflow_rules", "pipeline_stage"],
            "frozen": false,
            "icon": "Workflow",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Routed Message",
                "method": "orchestrate_workflow",
                "name": "routed_message",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_value": {
                "_input_type": "MessageInput",
                "display_name": "Input Message",
                "info": "Incoming message to route through workflow",
                "input_types": ["Message"],
                "name": "input_value",
                "required": true,
                "type": "str"
              },
              "prospect_list": {
                "_input_type": "HandleInput",
                "display_name": "Prospect List",
                "info": "Deduplicated prospect data for workflow processing",
                "input_types": ["Data"],
                "name": "prospect_list",
                "type": "data"
              },
              "workflow_rules": {
                "_input_type": "MultilineInput",
                "advanced": true,
                "display_name": "Workflow Rules",
                "info": "Rules defining workflow stages and transitions",
                "multiline": true,
                "name": "workflow_rules",
                "type": "str",
                "value": "{\n  \"stages\": [\"initial_contact\", \"qualification\", \"presentation\", \"follow_up\", \"closing\"],\n  \"stage_actions\": {\n    \"initial_contact\": \"sms_outreach\",\n    \"qualification\": \"phone_call\",\n    \"presentation\": \"schedule_meeting\",\n    \"follow_up\": \"email_sequence\",\n    \"closing\": \"contract_review\"\n  },\n  \"auto_advance_conditions\": {\n    \"response_received\": \"advance_stage\",\n    \"no_response_7_days\": \"follow_up_sequence\"\n  }\n}"
              },
              "pipeline_stage": {
                "_input_type": "DropdownInput",
                "display_name": "Current Pipeline Stage",
                "options": ["initial_contact", "qualification", "presentation", "follow_up", "closing"],
                "name": "pipeline_stage",
                "value": "initial_contact",
                "type": "str"
              }
            },
            "tool_mode": false
          },
          "type": "CustomComponent"
        },
        "dragging": false,
        "height": 320,
        "id": "WorkflowOrchestrator-Main",
        "position": {"x": 500, "y": 50},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "SystemPrompt-Impact",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {
              "template": ["memory", "context"]
            },
            "description": "Create a prompt template with dynamic variables.",
            "display_name": "Prompt",
            "documentation": "",
            "edited": false,
            "field_order": ["template"],
            "frozen": false,
            "icon": "prompts",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Prompt Message",
                "method": "build_prompt",
                "name": "prompt",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "template": {
                "_input_type": "PromptInput",
                "advanced": false,
                "display_name": "Template",
                "dynamic": false,
                "info": "",
                "list": false,
                "name": "template",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_input": true,
                "type": "prompt",
                "value": "You are Katelyn, Impact Realty's Elite Recruiting Specialist & Workflow Manager.\n\nCORE IDENTITY:\n- Company: Impact Realty - Premier real estate brokerage\n- Mission: Empowering agents to achieve extraordinary results with 90% commission splits\n- Values: Integrity, Innovation, Impact, Excellence\n- Role: Expert recruiting specialist with advanced AI-powered workflow management\n\nADVANCED CAPABILITIES:\n- Multi-channel outreach (SMS, Email, Phone, Social)\n- Intelligent prospect scoring and pipeline management  \n- Automated follow-up sequences and calendar scheduling\n- Real-time CRM integration with Zoho\n- Cross-session conversation continuity\n- Advanced memory retrieval and context awareness\n\nCOMMUNICATION STYLE:\n- Professional yet approachable and personable\n- Data-driven insights with emotional intelligence\n- Solution-focused conversations that build rapport\n- Compliance-aware (fair housing, recruiting regulations)\n- Consultative approach focusing on agent growth potential\n\nRECRUITING FOCUS:\n- Licensed real estate agents seeking growth and better support\n- Value proposition: 90% commission splits, cutting-edge technology, superior support\n- Market positioning: Premium brokerage with agent-centric culture\n- Focus on long-term relationship building, not transactional interactions\n\nWORKFLOW MANAGEMENT:\n- Track conversation stages and automatically advance pipeline\n- Coordinate multi-step outreach campaigns\n- Monitor prospect engagement and response patterns  \n- Schedule appointments and manage follow-up sequences\n- Update CRM records in real-time\n\nCONVERSATION HISTORY & CONTEXT:\n{memory}\n\nSEMANTIC CONTEXT:\n{context}\n\nALWAYS maintain Impact Realty's professional brand while leveraging advanced AI capabilities for superior recruiting outcomes."
              },
              "memory": {
                "advanced": false,
                "display_name": "Memory",
                "dynamic": false,
                "field_type": "str",
                "info": "Conversation history and context",
                "input_types": ["Message", "Text"],
                "list": false,
                "multiline": true,
                "name": "memory",
                "required": false,
                "show": true,
                "type": "str",
                "value": ""
              },
              "context": {
                "advanced": false,
                "display_name": "Context",
                "dynamic": false,
                "field_type": "str",
                "info": "Semantic context from vector store",
                "input_types": ["Message", "Text"],
                "list": false,
                "multiline": true,
                "name": "context",
                "required": false,
                "show": true,
                "type": "str",
                "value": ""
              }
            },
            "tool_mode": false
          },
          "type": "Prompt"
        },
        "dragging": false,
        "height": 380,
        "id": "SystemPrompt-Impact",
        "position": {"x": 900, "y": 50},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "BufferMemory-Main",
          "node": {
            "base_classes": ["Data", "Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Buffer memory for short-term conversation history.",
            "display_name": "Memory",
            "documentation": "",
            "edited": false,
            "field_order": ["session_id", "k", "memory_key"],
            "frozen": false,
            "icon": "Brain",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Messages",
                "method": "retrieve_messages",
                "name": "messages",
                "selected": "Data",
                "tool_mode": true,
                "types": ["Data"],
                "value": "__UNDEFINED__"
              },
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Messages Text",
                "method": "retrieve_messages_as_text",
                "name": "messages_text",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "session_id": {
                "_input_type": "MessageTextInput",
                "display_name": "Session ID",
                "info": "Session ID for conversation tracking",
                "input_types": ["Message"],
                "name": "session_id",
                "type": "str"
              },
              "k": {
                "_input_type": "IntInput",
                "display_name": "Number of Messages",
                "info": "Number of messages to keep in buffer",
                "name": "k",
                "type": "int",
                "value": 10
              },
              "memory_key": {
                "_input_type": "StrInput",
                "display_name": "Memory Key",
                "info": "Key for storing memory",
                "name": "memory_key",
                "type": "str",
                "value": "chat_history"
              }
            },
            "tool_mode": false
          },
          "type": "Memory"
        },
        "dragging": false,
        "height": 280,
        "id": "BufferMemory-Main",
        "position": {"x": 1300, "y": 50},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "VectorStoreRetriever-Semantic",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Vector store retriever for semantic search and context enhancement.",
            "display_name": "Vector Store Retriever",
            "documentation": "",
            "edited": false,
            "field_order": ["query", "vector_store", "k", "similarity_threshold"],
            "frozen": false,
            "icon": "Database",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Retrieved Context",
                "method": "retrieve_context",
                "name": "retrieved_context",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "query": {
                "_input_type": "MessageTextInput",
                "display_name": "Query",
                "info": "Query for semantic search",
                "input_types": ["Message"],
                "name": "query",
                "required": true,
                "type": "str"
              },
              "vector_store": {
                "_input_type": "StrInput",
                "display_name": "Vector Store Path",
                "info": "Path to vector store",
                "name": "vector_store",
                "type": "str",
                "value": "./data/recruiting_knowledge_base"
              },
              "k": {
                "_input_type": "IntInput",
                "display_name": "Top K Results",
                "info": "Number of top results to retrieve",
                "name": "k",
                "type": "int",
                "value": 5
              },
              "similarity_threshold": {
                "_input_type": "SliderInput",
                "display_name": "Similarity Threshold",
                "info": "Minimum similarity score for results",
                "name": "similarity_threshold",
                "range_spec": {"min": 0.0, "max": 1.0, "step": 0.01},
                "type": "slider",
                "value": 0.7
              }
            },
            "tool_mode": false
          },
          "type": "VectorStoreRetriever"
        },
        "dragging": false,
        "height": 320,
        "id": "VectorStoreRetriever-Semantic",
        "position": {"x": 1300, "y": 400},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "OpenAIModel-Main",
          "node": {
            "base_classes": ["LanguageModel", "Message"],
            "beta": false,
            "category": "models",
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Generates text using OpenAI LLMs.",
            "display_name": "OpenAI",
            "documentation": "",
            "edited": false,
            "field_order": ["input_value", "system_message", "stream", "max_tokens", "model_kwargs", "json_mode", "model_name", "openai_api_base", "api_key", "temperature", "seed", "max_retries", "timeout"],
            "frozen": false,
            "icon": "OpenAI",
            "key": "OpenAIModel",
            "legacy": false,
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Message",
                "method": "text_response",
                "name": "text_output",
                "required_inputs": [],
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "api_key": {
                "_input_type": "SecretStrInput",
                "advanced": false,
                "display_name": "OpenAI API Key",
                "dynamic": false,
                "info": "The OpenAI API Key to use for the OpenAI model.",
                "input_types": [],
                "load_from_db": true,
                "name": "api_key",
                "password": true,
                "placeholder": "",
                "required": true,
                "show": true,
                "title_case": false,
                "type": "str",
                "value": "OPENAI_API_KEY"
              },
              "input_value": {
                "_input_type": "MessageInput",
                "advanced": false,
                "display_name": "Input",
                "dynamic": false,
                "info": "",
                "input_types": ["Message"],
                "list": false,
                "load_from_db": false,
                "name": "input_value",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": ""
              },
              "model_name": {
                "_input_type": "DropdownInput",
                "advanced": false,
                "combobox": true,
                "display_name": "Model Name",
                "dynamic": false,
                "info": "",
                "name": "model_name",
                "options": ["gpt-4o-mini", "gpt-4o", "gpt-4.1", "gpt-4.1-mini", "gpt-4.1-nano", "gpt-4.5-preview", "gpt-4-turbo", "gpt-4-turbo-preview", "gpt-4", "gpt-3.5-turbo", "o1"],
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_metadata": true,
                "type": "str",
                "value": "gpt-4o"
              },
              "system_message": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "display_name": "System Message",
                "dynamic": false,
                "info": "System message to pass to the model.",
                "input_types": ["Message"],
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "system_message",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": ""
              },
              "temperature": {
                "_input_type": "SliderInput",
                "advanced": false,
                "display_name": "Temperature",
                "dynamic": false,
                "info": "",
                "name": "temperature",
                "placeholder": "",
                "range_spec": {"max": 1, "min": 0, "step": 0.01, "step_type": "float"},
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "type": "slider",
                "value": 0.3
              },
              "max_tokens": {
                "_input_type": "IntInput",
                "advanced": true,
                "display_name": "Max Tokens",
                "info": "The maximum number of tokens to generate. Set to 0 for unlimited tokens.",
                "name": "max_tokens",
                "type": "int",
                "value": 2000
              }
            },
            "tool_mode": false
          },
          "type": "OpenAIModel"
        },
        "dragging": false,
        "height": 400,
        "id": "OpenAIModel-Main",
        "position": {"x": 900, "y": 500},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "ConditionalRouter-Stage",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Route messages based on conversation stage and trigger appropriate actions",
            "display_name": "Conditional Router",
            "documentation": "",
            "edited": false,
            "field_order": ["response", "routing_rules", "default_action"],
            "frozen": false,
            "icon": "GitBranch",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "SMS Route",
                "method": "route_to_sms",
                "name": "sms_route",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              },
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Email Route",
                "method": "route_to_email",
                "name": "email_route",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              },
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Default Route",
                "method": "route_default",
                "name": "default_route",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "response": {
                "_input_type": "MessageInput",
                "display_name": "Response",
                "info": "Agent response to analyze for routing",
                "input_types": ["Message"],
                "name": "response",
                "required": true,
                "type": "str"
              },
              "routing_rules": {
                "_input_type": "MultilineInput",
                "advanced": true,
                "display_name": "Routing Rules",
                "info": "JSON rules for message routing",
                "multiline": true,
                "name": "routing_rules",
                "type": "str",
                "value": "{\n  \"sms_triggers\": [\"send sms\", \"text message\", \"sms outreach\", \"initial contact\"],\n  \"email_triggers\": [\"send email\", \"email follow up\", \"email sequence\", \"professional email\"],\n  \"intent_analysis\": true,\n  \"confidence_threshold\": 0.7\n}"
              },
              "default_action": {
                "_input_type": "DropdownInput",
                "display_name": "Default Action",
                "info": "Default routing when no specific trigger matches",
                "name": "default_action",
                "options": ["chat_output", "sms", "email"],
                "type": "str",
                "value": "chat_output"
              }
            },
            "tool_mode": false
          },
          "type": "CustomComponent"
        },
        "dragging": false,
        "height": 340,
        "id": "ConditionalRouter-Stage",
        "position": {"x": 1300, "y": 750},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "HTTPTool-SalesMsgSend",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "HTTP tool for sending SMS via SalesMsg API.",
            "display_name": "HTTP Tool",
            "documentation": "",
            "edited": false,
            "field_order": ["input_data", "url", "method", "headers", "body"],
            "frozen": false,
            "icon": "Globe",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Response",
                "method": "make_request",
                "name": "response",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_data": {
                "_input_type": "MessageInput",
                "display_name": "Input Data",
                "info": "Message content to send via SMS",
                "input_types": ["Message"],
                "name": "input_data",
                "required": true,
                "type": "str"
              },
              "url": {
                "_input_type": "StrInput",
                "display_name": "URL",
                "info": "SalesMsg API endpoint for sending SMS",
                "name": "url",
                "required": true,
                "type": "str",
                "value": "https://api.salesmsg.com/v1/messages"
              },
              "method": {
                "_input_type": "DropdownInput",
                "display_name": "Method",
                "info": "HTTP method",
                "name": "method",
                "options": ["GET", "POST", "PUT", "DELETE"],
                "type": "str",
                "value": "POST"
              },
              "headers": {
                "_input_type": "MultilineInput",
                "display_name": "Headers",
                "info": "HTTP headers as JSON",
                "multiline": true,
                "name": "headers",
                "type": "str",
                "value": "{\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"Bearer {SALESMSG_API_KEY}\"\n}"
              },
              "body": {
                "_input_type": "MultilineInput",
                "display_name": "Request Body",
                "info": "Request body template",
                "multiline": true,
                "name": "body",
                "type": "str",
                "value": "{\n  \"phone\": \"{phone_number}\",\n  \"message\": \"{input_data}\",\n  \"from_phone\": \"{from_phone}\"\n}"
              }
            },
            "tool_mode": false
          },
          "type": "HTTPTool"
        },
        "dragging": false,
        "height": 360,
        "id": "HTTPTool-SalesMsgSend",
        "position": {"x": 100, "y": 1000},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "HTTPTool-SalesMsgGet",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "HTTP tool for retrieving SMS conversations via SalesMsg API.",
            "display_name": "HTTP Tool",
            "documentation": "",
            "edited": false,
            "field_order": ["input_data", "url", "method", "headers"],
            "frozen": false,
            "icon": "Globe",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Response",
                "method": "make_request",
                "name": "response",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_data": {
                "_input_type": "MessageInput",
                "display_name": "Input Data",
                "info": "SMS thread data to retrieve",
                "input_types": ["Message"],
                "name": "input_data",
                "required": true,
                "type": "str"
              },
              "url": {
                "_input_type": "StrInput",
                "display_name": "URL",
                "info": "SalesMsg API endpoint for getting conversations",
                "name": "url",
                "required": true,
                "type": "str",
                "value": "https://api.salesmsg.com/v1/conversations"
              },
              "method": {
                "_input_type": "DropdownInput",
                "display_name": "Method",
                "info": "HTTP method",
                "name": "method",
                "options": ["GET", "POST", "PUT", "DELETE"],
                "type": "str",
                "value": "GET"
              },
              "headers": {
                "_input_type": "MultilineInput",
                "display_name": "Headers",
                "info": "HTTP headers as JSON",
                "multiline": true,
                "name": "headers",
                "type": "str",
                "value": "{\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"Bearer {SALESMSG_API_KEY}\"\n}"
              }
            },
            "tool_mode": false
          },
          "type": "HTTPTool"
        },
        "dragging": false,
        "height": 320,
        "id": "HTTPTool-SalesMsgGet",
        "position": {"x": 500, "y": 1000},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "ConditionalRouter-Response",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Route based on prospect response sentiment and intent.",
            "display_name": "Conditional Router",
            "documentation": "",
            "edited": false,
            "field_order": ["input_data", "routing_rules"],
            "frozen": false,
            "icon": "GitBranch",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Positive Route",
                "method": "route_positive",
                "name": "positive_route",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              },
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Negative Route",
                "method": "route_negative",
                "name": "negative_route",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              },
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "No Response Route",
                "method": "route_no_response",
                "name": "no_response_route",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_data": {
                "_input_type": "MessageInput",
                "display_name": "Input Data",
                "info": "SMS response data to analyze",
                "input_types": ["Message"],
                "name": "input_data",
                "required": true,
                "type": "str"
              },
              "routing_rules": {
                "_input_type": "MultilineInput",
                "advanced": true,
                "display_name": "Response Routing Rules",
                "info": "Rules for analyzing and routing responses",
                "multiline": true,
                "name": "routing_rules",
                "type": "str",
                "value": "{\n  \"positive_indicators\": [\"interested\", \"tell me more\", \"yes\", \"when\", \"schedule\", \"sounds good\"],\n  \"negative_indicators\": [\"not interested\", \"stop\", \"no thanks\", \"remove\", \"unsubscribe\"],\n  \"no_response_timeout\": 86400,\n  \"sentiment_threshold\": 0.6\n}"
              }
            },
            "tool_mode": false
          },
          "type": "CustomComponent"
        },
        "dragging": false,
        "height": 320,
        "id": "ConditionalRouter-Response",
        "position": {"x": 900, "y": 1000},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "HTTPTool-ZohoCRMCreate",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "HTTP tool for creating/updating Zoho CRM records via MCP.",
            "display_name": "HTTP Tool",
            "documentation": "",
            "edited": false,
            "field_order": ["input_data", "url", "method", "headers", "body"],
            "frozen": false,
            "icon": "Globe",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Response",
                "method": "make_request",
                "name": "response",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_data": {
                "_input_type": "MessageInput",
                "display_name": "Input Data",
                "info": "Prospect data for CRM record creation/update",
                "input_types": ["Message"],
                "name": "input_data",
                "required": true,
                "type": "str"
              },
              "url": {
                "_input_type": "StrInput",
                "display_name": "URL",
                "info": "Zoho CRM MCP endpoint",
                "name": "url",
                "required": true,
                "type": "str",
                "value": "{ZOHO_MCP_BASE_URL}/crm/create"
              },
              "method": {
                "_input_type": "DropdownInput",
                "display_name": "Method",
                "info": "HTTP method",
                "name": "method",
                "options": ["GET", "POST", "PUT", "DELETE"],
                "type": "str",
                "value": "POST"
              },
              "headers": {
                "_input_type": "MultilineInput",
                "display_name": "Headers",
                "info": "HTTP headers as JSON",
                "multiline": true,
                "name": "headers",
                "type": "str",
                "value": "{\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"Bearer {ZOHO_ACCESS_TOKEN}\"\n}"
              },
              "body": {
                "_input_type": "MultilineInput",
                "display_name": "Request Body",
                "info": "Request body template for CRM record creation",
                "multiline": true,
                "name": "body",
                "type": "str",
                "value": "{\n  \"module\": \"Contacts\",\n  \"data\": {\n    \"First_Name\": \"{first_name}\",\n    \"Last_Name\": \"{last_name}\",\n    \"Email\": \"{email}\",\n    \"Phone\": \"{phone}\",\n    \"Lead_Source\": \"Impact Realty Recruiting\",\n    \"Recruiting_Stage\": \"Interested\"\n  }\n}"
              }
            },
            "tool_mode": false
          },
          "type": "HTTPTool"
        },
        "dragging": false,
        "height": 380,
        "id": "HTTPTool-ZohoCRMCreate",
        "position": {"x": 1300, "y": 1000},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "HTTPTool-ZohoCalendar",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "HTTP tool for Zoho Calendar scheduling via MCP.",
            "display_name": "HTTP Tool",
            "documentation": "",
            "edited": false,
            "field_order": ["input_data", "url", "method", "headers", "body"],
            "frozen": false,
            "icon": "Globe",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Response",
                "method": "make_request",
                "name": "response",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_data": {
                "_input_type": "MessageInput",
                "display_name": "Input Data",
                "info": "Contact data for calendar scheduling",
                "input_types": ["Message"],
                "name": "input_data",
                "required": true,
                "type": "str"
              },
              "url": {
                "_input_type": "StrInput",
                "display_name": "URL",
                "info": "Zoho Calendar MCP endpoint",
                "name": "url",
                "required": true,
                "type": "str",
                "value": "{ZOHO_MCP_BASE_URL}/calendar/schedule"
              },
              "method": {
                "_input_type": "DropdownInput",
                "display_name": "Method",
                "info": "HTTP method",
                "name": "method",
                "options": ["GET", "POST", "PUT", "DELETE"],
                "type": "str",
                "value": "POST"
              },
              "headers": {
                "_input_type": "MultilineInput",
                "display_name": "Headers",
                "info": "HTTP headers as JSON",
                "multiline": true,
                "name": "headers",
                "type": "str",
                "value": "{\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"Bearer {ZOHO_ACCESS_TOKEN}\"\n}"
              },
              "body": {
                "_input_type": "MultilineInput",
                "display_name": "Request Body",
                "info": "Request body template for calendar scheduling",
                "multiline": true,
                "name": "body",
                "type": "str",
                "value": "{\n  \"event_title\": \"Impact Realty - Initial Consultation with {prospect_name}\",\n  \"duration\": 30,\n  \"attendees\": [\"{prospect_email}\"],\n  \"description\": \"Initial consultation to discuss Impact Realty opportunities\"\n}"
              }
            },
            "tool_mode": false
          },
          "type": "HTTPTool"
        },
        "dragging": false,
        "height": 380,
        "id": "HTTPTool-ZohoCalendar",
        "position": {"x": 1700, "y": 1000},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "HTTPTool-ZohoTagNotInterested",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "HTTP tool for tagging prospects as 'Not Interested' in Zoho CRM.",
            "display_name": "HTTP Tool",
            "documentation": "",
            "edited": false,
            "field_order": ["input_data", "url", "method", "headers", "body"],
            "frozen": false,
            "icon": "Globe",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Response",
                "method": "make_request",
                "name": "response",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_data": {
                "_input_type": "MessageInput",
                "display_name": "Input Data",
                "info": "Prospect data for tagging as not interested",
                "input_types": ["Message"],
                "name": "input_data",
                "required": true,
                "type": "str"
              },
              "url": {
                "_input_type": "StrInput",
                "display_name": "URL",
                "info": "Zoho CRM MCP endpoint for tagging",
                "name": "url",
                "required": true,
                "type": "str",
                "value": "{ZOHO_MCP_BASE_URL}/crm/tag"
              },
              "method": {
                "_input_type": "DropdownInput",
                "display_name": "Method",
                "info": "HTTP method",
                "name": "method",
                "options": ["GET", "POST", "PUT", "DELETE"],
                "type": "str",
                "value": "POST"
              },
              "headers": {
                "_input_type": "MultilineInput",
                "display_name": "Headers",
                "info": "HTTP headers as JSON",
                "multiline": true,
                "name": "headers",
                "type": "str",
                "value": "{\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"Bearer {ZOHO_ACCESS_TOKEN}\"\n}"
              },
              "body": {
                "_input_type": "MultilineInput",
                "display_name": "Request Body",
                "info": "Request body template for tagging",
                "multiline": true,
                "name": "body",
                "type": "str",
                "value": "{\n  \"contact_id\": \"{contact_id}\",\n  \"tags\": [\"Not Interested\"],\n  \"recruiting_stage\": \"Disqualified\"\n}"
              }
            },
            "tool_mode": false
          },
          "type": "HTTPTool"
        },
        "dragging": false,
        "height": 380,
        "id": "HTTPTool-ZohoTagNotInterested",
        "position": {"x": 100, "y": 1450},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "ConditionalRouter-Retry",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Conditional router for retry logic and backoff strategy.",
            "display_name": "Conditional Router",
            "documentation": "",
            "edited": false,
            "field_order": ["input_data", "retry_rules"],
            "frozen": false,
            "icon": "GitBranch",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Retry Route",
                "method": "route_retry",
                "name": "retry_route",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              },
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Give Up Route",
                "method": "route_give_up",
                "name": "give_up_route",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_data": {
                "_input_type": "MessageInput",
                "display_name": "Input Data",
                "info": "Data for retry logic evaluation",
                "input_types": ["Message"],
                "name": "input_data",
                "required": true,
                "type": "str"
              },
              "retry_rules": {
                "_input_type": "MultilineInput",
                "advanced": true,
                "display_name": "Retry Rules",
                "info": "Rules for retry logic and backoff",
                "multiline": true,
                "name": "retry_rules",
                "type": "str",
                "value": "{\n  \"max_retries\": 3,\n  \"retry_delays\": [86400, 172800, 604800],\n  \"backoff_strategy\": \"exponential\",\n  \"give_up_after_days\": 14\n}"
              }
            },
            "tool_mode": false
          },
          "type": "CustomComponent"
        },
        "dragging": false,
        "height": 300,
        "id": "ConditionalRouter-Retry",
        "position": {"x": 500, "y": 1450},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "PythonTool-Delay",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Python tool for implementing delays and backoff logic.",
            "display_name": "Python Tool",
            "documentation": "",
            "edited": false,
            "field_order": ["input_data", "code"],
            "frozen": false,
            "icon": "Python",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Output",
                "method": "execute_code",
                "name": "output",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_data": {
                "_input_type": "MessageInput",
                "display_name": "Input Data",
                "info": "Data for delay processing",
                "input_types": ["Message"],
                "name": "input_data",
                "required": true,
                "type": "str"
              },
              "code": {
                "_input_type": "MultilineInput",
                "display_name": "Python Code",
                "info": "Python code for delay logic",
                "multiline": true,
                "name": "code",
                "type": "str",
                "value": "import time\nimport json\nfrom datetime import datetime, timedelta\n\n# Parse input data\ntry:\n    data = json.loads(input_data) if isinstance(input_data, str) else input_data\nexcept:\n    data = {'message': str(input_data)}\n\n# Get retry count from data\nretry_count = data.get('retry_count', 0)\nretry_count += 1\n\n# Calculate delay based on retry count (exponential backoff)\ndelay_seconds = min(300 * (2 ** (retry_count - 1)), 3600)  # Max 1 hour\n\n# Schedule next retry\nnext_retry_time = datetime.now() + timedelta(seconds=delay_seconds)\n\n# Prepare output with retry information\noutput_data = {\n    'original_message': data.get('message', ''),\n    'retry_count': retry_count,\n    'next_retry_time': next_retry_time.isoformat(),\n    'delay_seconds': delay_seconds,\n    'status': 'delayed_retry'\n}\n\noutput = json.dumps(output_data)"
              }
            },
            "tool_mode": false
          },
          "type": "PythonTool"
        },
        "dragging": false,
        "height": 320,
        "id": "PythonTool-Delay",
        "position": {"x": 900, "y": 1450},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "HTTPTool-ZohoMail",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "HTTP tool for Zoho Mail follow-up emails via MCP.",
            "display_name": "HTTP Tool",
            "documentation": "",
            "edited": false,
            "field_order": ["input_data", "url", "method", "headers", "body"],
            "frozen": false,
            "icon": "Globe",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Response",
                "method": "make_request",
                "name": "response",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_data": {
                "_input_type": "MessageInput",
                "display_name": "Input Data",
                "info": "Message content for email follow-up",
                "input_types": ["Message"],
                "name": "input_data",
                "required": true,
                "type": "str"
              },
              "url": {
                "_input_type": "StrInput",
                "display_name": "URL",
                "info": "Zoho Mail MCP endpoint",
                "name": "url",
                "required": true,
                "type": "str",
                "value": "{ZOHO_MCP_BASE_URL}/mail/send"
              },
              "method": {
                "_input_type": "DropdownInput",
                "display_name": "Method",
                "info": "HTTP method",
                "name": "method",
                "options": ["GET", "POST", "PUT", "DELETE"],
                "type": "str",
                "value": "POST"
              },
              "headers": {
                "_input_type": "MultilineInput",
                "display_name": "Headers",
                "info": "HTTP headers as JSON",
                "multiline": true,
                "name": "headers",
                "type": "str",
                "value": "{\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"Bearer {ZOHO_ACCESS_TOKEN}\"\n}"
              },
              "body": {
                "_input_type": "MultilineInput",
                "display_name": "Request Body",
                "info": "Request body template for email sending",
                "multiline": true,
                "name": "body",
                "type": "str",
                "value": "{\n  \"to\": \"{prospect_email}\",\n  \"subject\": \"Impact Realty - Follow-up on Our Conversation\",\n  \"body\": \"{input_data}\",\n  \"from\": \"katelyn@impactrealty.com\"\n}"
              }
            },
            "tool_mode": false
          },
          "type": "HTTPTool"
        },
        "dragging": false,
        "height": 380,
        "id": "HTTPTool-ZohoMail",
        "position": {"x": 1300, "y": 1450},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "PostgreSQL-Leads",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "PostgreSQL database for storing leads and outreach logs.",
            "display_name": "PostgreSQL",
            "documentation": "",
            "edited": false,
            "field_order": ["input_data", "connection_string", "query"],
            "frozen": false,
            "icon": "Database",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Response",
                "method": "execute_query",
                "name": "response",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_data": {
                "_input_type": "MessageInput",
                "display_name": "Input Data",
                "info": "Data to store in PostgreSQL",
                "input_types": ["Message"],
                "name": "input_data",
                "required": true,
                "type": "str"
              },
              "connection_string": {
                "_input_type": "SecretStrInput",
                "display_name": "PostgreSQL Connection",
                "info": "PostgreSQL connection string",
                "name": "connection_string",
                "password": true,
                "required": true,
                "type": "str",
                "value": "POSTGRESQL_URL"
              },
              "query": {
                "_input_type": "MultilineInput",
                "display_name": "SQL Query",
                "info": "SQL query for storing outreach logs",
                "multiline": true,
                "name": "query",
                "type": "str",
                "value": "INSERT INTO recruiting_outreach_logs (prospect_id, interaction_type, message_content, timestamp, status, pipeline_stage) VALUES ('{prospect_id}', '{interaction_type}', '{message_content}', NOW(), '{status}', '{pipeline_stage}')"
              }
            },
            "tool_mode": false
          },
          "type": "PostgreSQL"
        },
        "dragging": false,
        "height": 320,
        "id": "PostgreSQL-Leads",
        "position": {"x": 1700, "y": 1450},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "id": "HTTPTool-GrafanaWebhook",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "HTTP webhook for pushing metrics and logs to Grafana.",
            "display_name": "HTTP Tool",
            "documentation": "",
            "edited": false,
            "field_order": ["input_data", "url", "method", "headers", "body"],
            "frozen": false,
            "icon": "Globe",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Response",
                "method": "make_request",
                "name": "response",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_data": {
                "_input_type": "MessageInput",
                "display_name": "Input Data",
                "info": "Metrics data to send to Grafana",
                "input_types": ["Message"],
                "name": "input_data",
                "required": true,
                "type": "str"
              },
              "url": {
                "_input_type": "StrInput",
                "display_name": "URL",
                "info": "Grafana webhook endpoint",
                "name": "url",
                "required": true,
                "type": "str",
                "value": "{GRAFANA_WEBHOOK_URL}/recruiting-metrics"
              },
              "method": {
                "_input_type": "DropdownInput",
                "display_name": "Method",
                "info": "HTTP method",
                "name": "method",
                "options": ["GET", "POST", "PUT", "DELETE"],
                "type": "str",
                "value": "POST"
              },
              "headers": {
                "_input_type": "MultilineInput",
                "display_name": "Headers",
                "info": "HTTP headers as JSON",
                "multiline": true,
                "name": "headers",
                "type": "str",
                "value": "{\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"Bearer {GRAFANA_API_KEY}\"\n}"
              },
              "body": {
                "_input_type": "MultilineInput",
                "display_name": "Request Body",
                "info": "Request body template for metrics",
                "multiline": true,
                "name": "body",
                "type": "str",
                "value": "{\n  \"timestamp\": \"{timestamp}\",\n  \"metrics\": {\n    \"outreach_sent\": 1,\n    \"pipeline_stage\": \"{pipeline_stage}\",\n    \"response_received\": \"{response_received}\",\n    \"conversion_event\": \"{conversion_event}\"\n  },\n  \"tags\": {\n    \"source\": \"impact_recruiting_agent\",\n    \"prospect_id\": \"{prospect_id}\"\n  }\n}"
              }
            },
            "tool_mode": false
          },
          "type": "HTTPTool"
        },
        "dragging": false,
        "height": 380,
        "id": "HTTPTool-GrafanaWebhook",
        "position": {"x": 2100, "y": 1450},
        "selected": false,
        "type": "genericNode",
        "width": 320
      },
      {
        "data": {
          "description": "Display a chat message in the Playground.",
          "display_name": "Chat Output",
          "id": "ChatOutput-Recruiting",
          "node": {
            "base_classes": ["Message"],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Display a chat message in the Playground.",
            "display_name": "Chat Output",
            "documentation": "",
            "edited": false,
            "field_order": ["input_value", "should_store_message", "sender", "sender_name", "session_id", "data_template", "background_color", "chat_icon", "text_color"],
            "frozen": false,
            "icon": "MessagesSquare",
            "legacy": false,
            "lf_version": "1.0.19.post2",
            "metadata": {},
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Message",
                "method": "message_response",
                "name": "message",
                "selected": "Message",
                "tool_mode": true,
                "types": ["Message"],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "input_value": {
                "_input_type": "MessageInput",
                "advanced": false,
                "display_name": "Text",
                "dynamic": false,
                "info": "Message to be passed as output.",
                "input_types": ["Data", "DataFrame", "Message"],
                "list": false,
                "load_from_db": false,
                "name": "input_value",
                "placeholder": "",
                "required": true,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": ""
              },
              "sender_name": {
                "_input_type": "MessageTextInput",
                "advanced": true,
                "display_name": "Sender Name",
                "dynamic": false,
                "info": "Name of the sender.",
                "input_types": ["Message"],
                "list": false,
                "load_from_db": false,
                "name": "sender_name",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "Katelyn - Impact Realty AI"
              },
              "should_store_message": {
                "_input_type": "BoolInput",
                "advanced": true,
                "display_name": "Store Messages",
                "dynamic": false,
                "info": "Store the message in the history.",
                "list": false,
                "name": "should_store_message",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": true
              }
            },
            "tool_mode": false
          },
          "type": "ChatOutput"
        },
        "dragging": false,
        "height": 260,
        "id": "ChatOutput-Recruiting",
        "position": {"x": 2500, "y": 1450},
        "selected": false,
        "type": "genericNode",
        "width": 320
      }
    ],
    "viewport": {"x": 0, "y": 0, "zoom": 0.6}
  },
  "description": "Production-ready Impact Realty recruiting agent with complete Perfect Recruiter Flow implementation: CSV ingestion & validation, Zoho deduplication, native HTTP tools for SalesMsg & Zoho MCP operations, conditional routing with retry/backoff logic, PostgreSQL persistence, and Grafana webhook integration.",
  "endpoint_name": "impact-recruiting-agent-corrected",
  "gradient": "2",
  "icon": "Users",
  "id": "impact-recruiting-agent-corrected",
  "is_component": false,
  "last_tested_version": "1.0.19.post2",
  "name": "Impact Realty Perfect Recruiter Flow - Corrected",
  "tags": ["recruiting", "impact-realty", "perfect-flow", "http-tools", "mcp", "sms", "email", "crm", "retry-logic", "grafana", "postgresql"]
}